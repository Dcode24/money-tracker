{"ast":null,"code":"var _jsxFileName = \"/Users/dfunsho/Desktop/money-tracker/frontend/src/context/globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\"; // Importing necessary dependencies\nimport axios from \"axios\"; // Importing axios for HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5001/api/v1/\"; // Base URL for API requests\nconst GlobalContext = /*#__PURE__*/React.createContext(); // Creating a context for global state\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  // Creating a global provider component\n  const [incomes, setIncomes] = useState([]); // State for incomes\n  const [expenses, setExpenses] = useState([]); // State for expenses\n  const [error, setError] = useState(null); // State for handling errors\n\n  // // Function to add income\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message); // Catching and setting error if any\n    });\n\n    getIncomes(); // Fetching updated incomes after adding\n  };\n\n  // Function to fetch incomes\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`); // Fetching incomes from the API\n    setIncomes(response.data); // Setting fetched incomes in state\n    console.log(response.data); // Logging fetched incomes to the console\n  };\n\n  // Function to delete income\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`); // Deleting income by ID\n    getIncomes(); // Fetching updated incomes after deletion\n  };\n\n  // Function to calculate total income\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount; // Calculating total income\n    });\n\n    return totalIncome; // Returning the total income\n  };\n\n  // Function to add expense\n  const addExpense = async income => {\n    const response = await axios.post(`${BASE_URL}add-expense`, income).catch(err => {\n      setError(err.response.data.message); // Catching and setting error if any\n    });\n\n    getExpenses(); // Fetching updated expenses after adding\n  };\n\n  // Function to fetch expenses\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`); // Fetching expenses from the API\n    setExpenses(response.data); // Setting fetched expenses in state\n    console.log(response.data); // Logging fetched expenses to the console\n  };\n\n  // Function to delete expense\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`); // Deleting expense by ID\n    getExpenses(); // Fetching updated expenses after deletion\n  };\n\n  // Function to calculate total expenses\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome = totalIncome + income.amount; // Calculating total expenses\n    });\n\n    return totalIncome; // Returning the total expenses\n  };\n\n  // Function to calculate total balance\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses(); // Calculating total balance\n  };\n\n  // Function to fetch transaction history\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses]; // Combining incomes and expenses\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt); // Sorting by creation date\n    });\n\n    return history.slice(0, 3); // Returning the latest 3 transactions\n  };\n\n  // Providing state and functions to the context\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to access the global context\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext); // Using the useContext hook to access the context\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncomes","get","console","log","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["/Users/dfunsho/Desktop/money-tracker/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"; // Importing necessary dependencies\nimport axios from \"axios\"; // Importing axios for HTTP requests\n\nconst BASE_URL = \"http://localhost:5001/api/v1/\"; // Base URL for API requests\nconst GlobalContext = React.createContext(); // Creating a context for global state\n\nexport const GlobalProvider = ({ children }) => {\n  // Creating a global provider component\n  const [incomes, setIncomes] = useState([]); // State for incomes\n  const [expenses, setExpenses] = useState([]); // State for expenses\n  const [error, setError] = useState(null); // State for handling errors\n\n  // // Function to add income\n  const addIncome = async (income) => {\n    const response = await axios\n      .post(`${BASE_URL}add-income`, income)\n      .catch((err) => {\n        setError(err.response.data.message); // Catching and setting error if any\n      });\n    getIncomes(); // Fetching updated incomes after adding\n  };\n\n  // Function to fetch incomes\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`); // Fetching incomes from the API\n    setIncomes(response.data); // Setting fetched incomes in state\n    console.log(response.data); // Logging fetched incomes to the console\n  };\n\n  // Function to delete income\n  const deleteIncome = async (id) => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`); // Deleting income by ID\n    getIncomes(); // Fetching updated incomes after deletion\n  };\n\n  // Function to calculate total income\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach((income) => {\n      totalIncome = totalIncome + income.amount; // Calculating total income\n    });\n\n    return totalIncome; // Returning the total income\n  };\n\n  // Function to add expense\n  const addExpense = async (income) => {\n    const response = await axios\n      .post(`${BASE_URL}add-expense`, income)\n      .catch((err) => {\n        setError(err.response.data.message); // Catching and setting error if any\n      });\n    getExpenses(); // Fetching updated expenses after adding\n  };\n\n  // Function to fetch expenses\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`); // Fetching expenses from the API\n    setExpenses(response.data); // Setting fetched expenses in state\n    console.log(response.data); // Logging fetched expenses to the console\n  };\n\n  // Function to delete expense\n  const deleteExpense = async (id) => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`); // Deleting expense by ID\n    getExpenses(); // Fetching updated expenses after deletion\n  };\n\n  // Function to calculate total expenses\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach((income) => {\n      totalIncome = totalIncome + income.amount; // Calculating total expenses\n    });\n\n    return totalIncome; // Returning the total expenses\n  };\n\n  // Function to calculate total balance\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses(); // Calculating total balance\n  };\n\n  // Function to fetch transaction history\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses]; // Combining incomes and expenses\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt); // Sorting by creation date\n    });\n\n    return history.slice(0, 3); // Returning the latest 3 transactions\n  };\n\n  // Providing state and functions to the context\n  return (\n    <GlobalContext.Provider\n      value={{\n        addIncome,\n        getIncomes,\n        incomes,\n        deleteIncome,\n        expenses,\n        totalIncome,\n        addExpense,\n        getExpenses,\n        deleteExpense,\n        totalExpenses,\n        totalBalance,\n        transactionHistory,\n        error,\n        setError,\n      }}\n    >\n      {children} {/* Rendering child components */}\n    </GlobalContext.Provider>\n  );\n};\n\n// Custom hook to access the global context\nexport const useGlobalContext = () => {\n  return useContext(GlobalContext); // Using the useContext hook to access the context\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}