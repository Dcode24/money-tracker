{"ast":null,"code":"var _jsxFileName = \"/Users/dfunsho/Desktop/money-tracker/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Chart as ChartJs,\n// Importing required components from Chart.js library\nCategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\"; // Importing Line component from react-chartjs-2\nimport styled from \"styled-components\"; // Importing styled-components for styling\nimport { useGlobalContext } from \"../../context/globalContext\"; // Importing global context\nimport { dateFormat } from \"../../utils/dateFormat\"; // Importing date formatting utility function\n\n//  Registering necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\n// Chart component\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext(); //Accessing incomes and expenses from global context\n\n  // Creating data for the chart\n  const data = {\n    labels: incomes.map(inc => {\n      const {\n        date\n      } = inc;\n      return dateFormat(date); // Formatting date for display\n    }),\n\n    datasets: [{\n      label: \"Income\",\n      data: [...incomes.map(income => {\n        const {\n          amount\n        } = income;\n        return amount; // Extracting income amounts\n      })],\n\n      backgroundColor: \"green\",\n      // Setting background color for income data\n      tension: 0.2 // Setting tension for the line\n    }, {\n      label: \"Expenses\",\n      data: [...expenses.map(expense => {\n        const {\n          amount\n        } = expense;\n        return amount; // Extracting expense amounts\n      })],\n\n      backgroundColor: \"red\",\n      // Setting background color for expense data\n      tension: 0.2 // Setting tension for the line\n    }]\n  };\n\n  return (\n    /*#__PURE__*/\n    // Styling for the chart container\n    _jsxDEV(ChartStyled, {\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// Styled wrapper for the chart\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n  background: #fcf6f9;\n  border: 2px solid #ffffff;\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n  padding: 1rem;\n  border-radius: 20px;\n  height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart; // Exporting the Chart component\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","styled","useGlobalContext","dateFormat","jsxDEV","_jsxDEV","register","_s","incomes","expenses","data","labels","map","inc","date","datasets","label","income","amount","backgroundColor","tension","expense","ChartStyled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["/Users/dfunsho/Desktop/money-tracker/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Chart as ChartJs, // Importing required components from Chart.js library\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from \"chart.js\";\n\nimport { Line } from \"react-chartjs-2\"; // Importing Line component from react-chartjs-2\nimport styled from \"styled-components\"; // Importing styled-components for styling\nimport { useGlobalContext } from \"../../context/globalContext\"; // Importing global context\nimport { dateFormat } from \"../../utils/dateFormat\"; // Importing date formatting utility function\n\n//  Registering necessary Chart.js components\nChartJs.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n// Chart component\nfunction Chart() {\n  const { incomes, expenses } = useGlobalContext(); //Accessing incomes and expenses from global context\n\n  // Creating data for the chart\n  const data = {\n    labels: incomes.map((inc) => {\n      const { date } = inc;\n      return dateFormat(date); // Formatting date for display\n    }),\n    datasets: [\n      {\n        label: \"Income\",\n        data: [\n          ...incomes.map((income) => {\n            const { amount } = income;\n            return amount; // Extracting income amounts\n          }),\n        ],\n        backgroundColor: \"green\", // Setting background color for income data\n        tension: 0.2, // Setting tension for the line\n      },\n      {\n        label: \"Expenses\",\n        data: [\n          ...expenses.map((expense) => {\n            const { amount } = expense;\n            return amount; // Extracting expense amounts\n          }),\n        ],\n        backgroundColor: \"red\", // Setting background color for expense data\n        tension: 0.2, // Setting tension for the line\n      },\n    ],\n  };\n\n  return (\n    // Styling for the chart container\n    <ChartStyled>\n      <Line data={data} /> {/* Rendering Line chart using react-chartjs-2 */}\n    </ChartStyled>\n  );\n}\n\n// Styled wrapper for the chart\nconst ChartStyled = styled.div`\n  background: #fcf6f9;\n  border: 2px solid #ffffff;\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n  padding: 1rem;\n  border-radius: 20px;\n  height: 100%;\n`;\n\nexport default Chart; // Exporting the Chart component\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO;AAAE;AAClBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UAAU,QACL,UAAU;AAEjB,SAASC,IAAI,QAAQ,iBAAiB,CAAC,CAAC;AACxC,OAAOC,MAAM,MAAM,mBAAmB,CAAC,CAAC;AACxC,SAASC,gBAAgB,QAAQ,6BAA6B,CAAC,CAAC;AAChE,SAASC,UAAU,QAAQ,wBAAwB,CAAC,CAAC;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAd,OAAO,CAACe,QAAQ,CACdd,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UACF,CAAC;AACD;AACA,SAAST,KAAKA,CAAA,EAAG;EAAAiB,EAAA;EACf,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGP,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMQ,IAAI,GAAG;IACXC,MAAM,EAAEH,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAK;MAC3B,MAAM;QAAEC;MAAK,CAAC,GAAGD,GAAG;MACpB,OAAOV,UAAU,CAACW,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;;IACFC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,QAAQ;MACfN,IAAI,EAAE,CACJ,GAAGF,OAAO,CAACI,GAAG,CAAEK,MAAM,IAAK;QACzB,MAAM;UAAEC;QAAO,CAAC,GAAGD,MAAM;QACzB,OAAOC,MAAM,CAAC,CAAC;MACjB,CAAC,CAAC,CACH;;MACDC,eAAe,EAAE,OAAO;MAAE;MAC1BC,OAAO,EAAE,GAAG,CAAE;IAChB,CAAC,EACD;MACEJ,KAAK,EAAE,UAAU;MACjBN,IAAI,EAAE,CACJ,GAAGD,QAAQ,CAACG,GAAG,CAAES,OAAO,IAAK;QAC3B,MAAM;UAAEH;QAAO,CAAC,GAAGG,OAAO;QAC1B,OAAOH,MAAM,CAAC,CAAC;MACjB,CAAC,CAAC,CACH;;MACDC,eAAe,EAAE,KAAK;MAAE;MACxBC,OAAO,EAAE,GAAG,CAAE;IAChB,CAAC;EAEL,CAAC;;EAED;IAAA;IACE;IACAf,OAAA,CAACiB,WAAW;MAAAC,QAAA,gBACVlB,OAAA,CAACL,IAAI;QAACU,IAAI,EAAEA;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;AAElB;;AAEA;AAAApB,EAAA,CA3CSjB,KAAK;EAAA,QACkBY,gBAAgB;AAAA;AAAA0B,EAAA,GADvCtC,KAAK;AA4Cd,MAAMgC,WAAW,GAAGrB,MAAM,CAAC4B,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIR,WAAW;AASjB,eAAehC,KAAK,CAAC,CAAC;AAAA,IAAAsC,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}