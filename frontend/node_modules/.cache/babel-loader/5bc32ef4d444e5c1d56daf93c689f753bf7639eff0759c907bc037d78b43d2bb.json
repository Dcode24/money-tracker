{"ast":null,"code":"var _jsxFileName = \"/Users/dfunsho/Desktop/money-tracker/frontend/src/Components/IncomeItem/IncomeItem.js\";\n// Import necessary modules and icons from utilities\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { bitcoin, book, calender, card, circle, clothing, comment, pound, food, freelance, medical, money, piggy, stocks, takeaway, trash, tv, users, yt } from \"../../utils/Icons\";\nimport Button from \"../Button/Button\";\nimport { dateFormat } from \"../../utils/dateFormat\";\n\n// Functional component for displaying individual income items\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IncomeItem({\n  id,\n  title,\n  amount,\n  date,\n  category,\n  description,\n  deleteItem,\n  indicatorColor,\n  type\n}) {\n  // Function to determine the appropriate category icon for income\n  const categoryIcon = () => {\n    // Switch statement mapping category to respective icons\n    switch (category) {\n      case \"salary\":\n        return money;\n      case \"freelancing\":\n        return freelance;\n      case \"investments\":\n        return stocks;\n      case \"stocks\":\n        return users;\n      case \"bitcoin\":\n        return bitcoin;\n      case \"bank\":\n        return card;\n      case \"youtube\":\n        return yt;\n      case \"other\":\n        return piggy;\n      // Default return is an empty string\n      default:\n        return \"\";\n    }\n  };\n\n  // Function to determine the appropriate category icon for expenses\n  const expenseCatIcon = () => {\n    // Switch statement mapping category to respective icons\n    switch (category) {\n      case \"education\":\n        return book;\n      case \"groceries\":\n        return food;\n      case \"health\":\n        return medical;\n      case \"subscriptions\":\n        return tv;\n      case \"takeaways\":\n        return takeaway;\n      case \"clothing\":\n        return clothing;\n      case \"travelling\":\n        return freelance;\n      case \"other\":\n        return circle;\n      // Default return is an empty string\n      default:\n        return \"\";\n    }\n  };\n\n  // Log the type for debugging purposes\n  console.log(\"type\", type);\n\n  // Render the Income Item component\n  return /*#__PURE__*/_jsxDEV(IncomeItemStyled, {\n    indicator: indicatorColor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon\",\n      children: type === \"expense\" ? expenseCatIcon() : categoryIcon()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [pound, \" \", amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [calender, \" \", dateFormat(date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [comment, description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-con\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: trash,\n            bPad: \"1rem\",\n            bRad: \"50%\",\n            bg: \"var(--primary-color\",\n            color: \"#fff\",\n            iColor: \"#fff\",\n            hColor: \"var(--color-green)\",\n            onClick: () => deleteItem(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n// Styled component for Income Item\n_c = IncomeItem;\nconst IncomeItemStyled = styled.div`\n  // Styling for Income Item container\n  background: #fcf6f9; // Background color\n  border: 2px solid #ffffff; // Border style and color\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06); // Shadow for a raised effect\n  border-radius: 20px; // Rounded corners\n  padding: 1rem; // Padding inside the container\n  margin-bottom: 1rem; // Margin at the bottom\n  display: flex; // Display as flex container\n  align-items: center; // Align items along the cross-axis (vertically)\n  gap: 1rem; // Spacing between child elements\n  width: 100%; // Full width\n  color: #222260; // Text color\n\n  // Styling for the category icon container\n  .icon {\n    width: 80px; // Width of the icon container\n    height: 80px; // Height of the icon container\n    border-radius: 20px; // Rounded corners for the icon container\n    background: #f5f5f5; // Background color for the icon container\n    display: flex; // Display as flex container\n    align-items: center; // Align items along the cross-axis (vertically)\n    justify-content: center; // Center content along the main axis (horizontally)\n    border: 2px solid #ffffff; // Border style and color for the icon container\n    i {\n      font-size: 2.6rem; // Font size for the icon\n    }\n  }\n\n  // Styling for the content area of the Income Item\n  .content {\n    flex: 1; // Flex grow to occupy available space\n    display: flex; // Display as flex container\n    flex-direction: column; // Column-wise arrangement\n    gap: 0.2rem; // Spacing between child elements\n  }\n  // Styling for the title of the Income Item\n  h5 {\n    font-size: 1.3rem; // Font size for the title\n    padding-left: 2rem; // Left padding for the title\n    position: relative; // Positioning context for pseudo-element\n    &::before {\n      content: \"\"; // Empty content for the pseudo-element\n      position: absolute; // Positioned absolutely\n      left: 0; // Positioning from the left\n      top: 50%; // Positioning from the top\n      transform: translateY(-50%); // Center vertically using translate\n      width: 0.8rem; // Width of the indicator\n      height: 0.8rem; // Height of the indicator\n      border-radius: 50%; // Border radius for a circle\n      background: ${props => props.indicator}; // Indicator color based on prop value\n    }\n  }\n  // Styling for inner content of the Income Item\n  .inner-content {\n    display: flex; // Display as flex container\n    justify-content: space-between; // Space between child elements\n    align-items: center; // Align items along the cross-axis (vertically)\n    .text {\n      display: flex; // Display as flex container\n      align-items: center; // Align items along the cross-axis (vertically)\n      gap: 1.5rem; // Spacing between child elements\n\n      // Styling for paragraph elements inside the text\n      p {\n        display: flex; // Display as flex container\n        align-items: center; // Align items along the cross-axis (vertically)\n        gap: 0.5rem; // Spacing between child elements\n        color: var(--primary-color); // Text color based on a variable\n        opacity: 0.8; // Opacity level for the text\n      }\n    }\n  }\n`;\n_c2 = IncomeItemStyled;\nexport default IncomeItem; // Exporting the Income Item styled component\nvar _c, _c2;\n$RefreshReg$(_c, \"IncomeItem\");\n$RefreshReg$(_c2, \"IncomeItemStyled\");","map":{"version":3,"names":["React","styled","bitcoin","book","calender","card","circle","clothing","comment","pound","food","freelance","medical","money","piggy","stocks","takeaway","trash","tv","users","yt","Button","dateFormat","jsxDEV","_jsxDEV","IncomeItem","id","title","amount","date","category","description","deleteItem","indicatorColor","type","categoryIcon","expenseCatIcon","console","log","IncomeItemStyled","indicator","children","className","fileName","_jsxFileName","lineNumber","columnNumber","icon","bPad","bRad","bg","color","iColor","hColor","onClick","_c","div","props","_c2","$RefreshReg$"],"sources":["/Users/dfunsho/Desktop/money-tracker/frontend/src/Components/IncomeItem/IncomeItem.js"],"sourcesContent":["// Import necessary modules and icons from utilities\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  bitcoin,\n  book,\n  calender,\n  card,\n  circle,\n  clothing,\n  comment,\n  pound,\n  food,\n  freelance,\n  medical,\n  money,\n  piggy,\n  stocks,\n  takeaway,\n  trash,\n  tv,\n  users,\n  yt,\n} from \"../../utils/Icons\";\nimport Button from \"../Button/Button\";\nimport { dateFormat } from \"../../utils/dateFormat\";\n\n// Functional component for displaying individual income items\nfunction IncomeItem({\n  id,\n  title,\n  amount,\n  date,\n  category,\n  description,\n  deleteItem,\n  indicatorColor,\n  type,\n}) {\n  // Function to determine the appropriate category icon for income\n  const categoryIcon = () => {\n    // Switch statement mapping category to respective icons\n    switch (category) {\n      case \"salary\":\n        return money;\n      case \"freelancing\":\n        return freelance;\n      case \"investments\":\n        return stocks;\n      case \"stocks\":\n        return users;\n      case \"bitcoin\":\n        return bitcoin;\n      case \"bank\":\n        return card;\n      case \"youtube\":\n        return yt;\n      case \"other\":\n        return piggy;\n      // Default return is an empty string\n      default:\n        return \"\";\n    }\n  };\n\n  // Function to determine the appropriate category icon for expenses\n  const expenseCatIcon = () => {\n    // Switch statement mapping category to respective icons\n    switch (category) {\n      case \"education\":\n        return book;\n      case \"groceries\":\n        return food;\n      case \"health\":\n        return medical;\n      case \"subscriptions\":\n        return tv;\n      case \"takeaways\":\n        return takeaway;\n      case \"clothing\":\n        return clothing;\n      case \"travelling\":\n        return freelance;\n      case \"other\":\n        return circle;\n      // Default return is an empty string\n      default:\n        return \"\";\n    }\n  };\n\n  // Log the type for debugging purposes\n  console.log(\"type\", type);\n\n  // Render the Income Item component\n  return (\n    <IncomeItemStyled indicator={indicatorColor}>\n      {/* Displaying the category icon based on the type */}\n      <div className=\"icon\">\n        {type === \"expense\" ? expenseCatIcon() : categoryIcon()}\n      </div>\n      {/* Displaying income item details */}\n      <div className=\"content\">\n        <h5>{title}</h5>\n        <div className=\"inner-content\">\n          <div className=\"text\">\n            {/* Displaying specific income item details */}\n            <p>\n              {pound} {amount}\n            </p>\n            <p>\n              {calender} {dateFormat(date)}\n            </p>\n            <p>\n              {comment}\n              {description}\n            </p>\n          </div>\n          {/* Button to delete the income item */}\n          <div className=\"btn-con\">\n            <Button\n              icon={trash}\n              bPad={\"1rem\"}\n              bRad={\"50%\"}\n              bg={\"var(--primary-color\"}\n              color={\"#fff\"}\n              iColor={\"#fff\"}\n              hColor={\"var(--color-green)\"}\n              onClick={() => deleteItem(id)}\n            />\n          </div>\n        </div>\n      </div>\n    </IncomeItemStyled>\n  );\n}\n\n// Styled component for Income Item\nconst IncomeItemStyled = styled.div`\n  // Styling for Income Item container\n  background: #fcf6f9; // Background color\n  border: 2px solid #ffffff; // Border style and color\n  box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06); // Shadow for a raised effect\n  border-radius: 20px; // Rounded corners\n  padding: 1rem; // Padding inside the container\n  margin-bottom: 1rem; // Margin at the bottom\n  display: flex; // Display as flex container\n  align-items: center; // Align items along the cross-axis (vertically)\n  gap: 1rem; // Spacing between child elements\n  width: 100%; // Full width\n  color: #222260; // Text color\n\n  // Styling for the category icon container\n  .icon {\n    width: 80px; // Width of the icon container\n    height: 80px; // Height of the icon container\n    border-radius: 20px; // Rounded corners for the icon container\n    background: #f5f5f5; // Background color for the icon container\n    display: flex; // Display as flex container\n    align-items: center; // Align items along the cross-axis (vertically)\n    justify-content: center; // Center content along the main axis (horizontally)\n    border: 2px solid #ffffff; // Border style and color for the icon container\n    i {\n      font-size: 2.6rem; // Font size for the icon\n    }\n  }\n\n  // Styling for the content area of the Income Item\n  .content {\n    flex: 1; // Flex grow to occupy available space\n    display: flex; // Display as flex container\n    flex-direction: column; // Column-wise arrangement\n    gap: 0.2rem; // Spacing between child elements\n  }\n  // Styling for the title of the Income Item\n  h5 {\n    font-size: 1.3rem; // Font size for the title\n    padding-left: 2rem; // Left padding for the title\n    position: relative; // Positioning context for pseudo-element\n    &::before {\n      content: \"\"; // Empty content for the pseudo-element\n      position: absolute; // Positioned absolutely\n      left: 0; // Positioning from the left\n      top: 50%; // Positioning from the top\n      transform: translateY(-50%); // Center vertically using translate\n      width: 0.8rem; // Width of the indicator\n      height: 0.8rem; // Height of the indicator\n      border-radius: 50%; // Border radius for a circle\n      background: ${(props) =>\n        props.indicator}; // Indicator color based on prop value\n    }\n  }\n  // Styling for inner content of the Income Item\n  .inner-content {\n    display: flex; // Display as flex container\n    justify-content: space-between; // Space between child elements\n    align-items: center; // Align items along the cross-axis (vertically)\n    .text {\n      display: flex; // Display as flex container\n      align-items: center; // Align items along the cross-axis (vertically)\n      gap: 1.5rem; // Spacing between child elements\n\n      // Styling for paragraph elements inside the text\n      p {\n        display: flex; // Display as flex container\n        align-items: center; // Align items along the cross-axis (vertically)\n        gap: 0.5rem; // Spacing between child elements\n        color: var(--primary-color); // Text color based on a variable\n        opacity: 0.8; // Opacity level for the text\n      }\n    }\n  }\n`;\nexport default IncomeItem; // Exporting the Income Item styled component\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}